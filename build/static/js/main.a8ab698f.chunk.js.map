{"version":3,"sources":["components/PrivateRoute/PrivateRoute.js","components/PublicRoute/PublicRoute.js","shared/Layout/Layout.js","routes.js","App.js","redux/contacts/contactsReducer.js","redux/filter/filterReducer.js","redux/store.js","index.js","redux/contacts/contactsSelectors.js","components/Form/Form.module.css","redux/auth/authOperations.js","redux/auth/authSelectors.js","redux/contacts/index.js","components/ContactsList/ContactsListItem/ContactsListItem.module.css","components/Filter/Filter.module.css","redux/auth/authReducers.js","redux/filter/filterAction.js","shared/Notification/Notification.module.css","redux/contacts/contactsOperations.js","shared/Title/Title.module.css","components/ContactsList/ContactsList.module.css","shared/Loader/Loader.js","shared/Notification/Notification.js","redux/auth/authActions.js","shared/Loader/Loader.module.css","shared/Layout/Layout.module.css","shared/Title/Title.js","components/Form/Form.js","redux/contacts/contactsAction.js","components/Filter/Filter.js","components/ContactsList/ContactsListItem/ContactsListItem.js","components/ContactsList/ContactsList.js"],"names":["connect","state","isAuthenticated","authSelectors","Component","component","routeProps","render","props","to","restricted","Layout","children","className","styles","container","routes","exact","path","name","lazy","private","App","this","onGetCurrentUser","fallback","Loader","map","route","idx","authOperations","getCurrentUser","contactReducer","createReducer","fetchContactsSuccess","action","payload","addContactSuccess","deleteContactSuccess","filter","contact","id","loading","addContactRequest","addContactError","fetchContactsRequest","fetchContactsError","deleteContactRequest","deleteContactError","filterReducer","filterContacts","_","authPersistConfig","key","storage","whitelist","rootReducer","auth","persistReducer","authReducer","contacts","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","persistor","persistStore","ReactDOM","StrictMode","document","getElementById","getContacts","getFilter","getFilteredContacts","createSelector","toLowerCase","includes","getContactById","contactId","find","getLoading","module","exports","axios","defaults","baseURL","token","headers","common","Authorization","register","credentials","dispatch","authActions","registerRequest","post","then","response","data","registerSuccess","catch","error","registerError","message","login","loginRequest","loginSuccess","loginError","getState","persistedToken","getCurrentUserRequest","get","getCurrentUserSuccess","getCurrentUserError","logout","logoutRequest","logoutSuccess","logoutError","getUserEmail","user","email","getErrorMessage","initialState","combineReducers","createAction","addContact","number","fetchContacts","deleteContact","delete","InfoLoader","loader","type","color","height","width","Notification","in","appear","timeout","classNames","unmountOnExit","text","Title","title","Form","contactExists","handleChange","event","target","value","setState","handleSubmit","preventDefault","setTimeout","form","onSubmit","label","onChange","placeholder","input","required","button","mapDispatchToProps","contactsOperations","contactsSelectors","filterContact","length","ownProps","item","btn","onClick","searchContact","TransitionGroup","list","CSSTransition"],"mappings":"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","file":"static/js/main.a8ab698f.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors } from '../../redux/auth';\r\n\r\nconst PrivateRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={props =>\r\n      isAuthenticated ? <Component {...props} /> : <Redirect to=\"/login\" />\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.isAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import React from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors } from '../../redux/auth';\r\n\r\nconst PublicRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  restricted,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={props =>\r\n      isAuthenticated && restricted ? (\r\n        <Redirect to=\"/contacts\" />\r\n      ) : (\r\n        <Component {...props} />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.isAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PublicRoute);\r\n","import React from 'react';\r\n\r\nimport styles from './Layout.module.css';\r\n\r\nconst Layout = ({ children }) => {\r\n  return <div className={styles.container}>{children}</div>;\r\n};\r\n\r\nexport default Layout;\r\n","import { lazy } from 'react';\r\n\r\nconst routes = [\r\n  {\r\n    exact: true,\r\n    path: '/',\r\n    name: 'Home',\r\n    component: lazy(() => import('./pages/Home/Home')),\r\n    private: false,\r\n    restricted: false,\r\n  },\r\n  {\r\n    exact: true,\r\n    path: '/register',\r\n    name: 'Register',\r\n    component: lazy(() => import('./pages/Registration/Registration')),\r\n    private: false,\r\n    restricted: true,\r\n  },\r\n  {\r\n    exact: true,\r\n    path: '/login',\r\n    name: 'Login',\r\n    component: lazy(() => import('./pages/Loginization/Loginization')),\r\n    private: false,\r\n    restricted: true,\r\n  },\r\n  {\r\n    exact: true,\r\n    path: '/contacts',\r\n    name: 'Contacts',\r\n    component: lazy(() => import('./pages/Contacts/Contacts')),\r\n    private: true,\r\n    restricted: false,\r\n  },\r\n];\r\n\r\nexport default routes;\r\n","import React, { Component, Suspense } from 'react';\nimport { connect } from 'react-redux';\nimport PrivateRoute from './components/PrivateRoute/PrivateRoute';\nimport PublicRoute from './components/PublicRoute/PublicRoute';\nimport Title from './shared/Title/Title';\nimport Loader from './shared/Loader/Loader';\nimport Layout from './shared/Layout/Layout';\nimport Form from './components/Form/Form';\nimport ContactsList from './components/ContactsList/ContactsList';\nimport Filter from './components/Filter/Filter';\nimport contactsOperations from './redux/contacts/contactsOperations';\nimport contactsSelectors from './redux/contacts/contactsSelectors';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Route, Switch } from 'react-router-dom';\nimport routes from './routes';\nimport { authOperations } from './redux/auth';\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onGetCurrentUser();\n  }\n\n  render() {\n    return (\n      <Layout>\n        <Suspense fallback={<Loader />}>\n          <Switch>\n            {routes.map((route, idx) => {\n              return route.private ? (\n                <PrivateRoute key={idx} {...route} />\n              ) : (\n                <PublicRoute\n                  key={idx}\n                  {...route}\n                  restricted={route.restricted}\n                />\n              );\n            })}\n          </Switch>\n        </Suspense>\n      </Layout>\n    );\n  }\n}\n\nexport default connect(null, {\n  onGetCurrentUser: authOperations.getCurrentUser,\n})(App);\n","import { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n} from './contactsAction';\r\n\r\nconst addContact = (state, action) => {\r\n  return [...state, action.payload];\r\n};\r\n\r\nconst deleteContact = (state, action) => {\r\n  return state.filter(contact => contact.id !== action.payload);\r\n};\r\n\r\nconst contactReducer = createReducer([], {\r\n  [fetchContactsSuccess]: (state, action) => action.payload,\r\n  [addContactSuccess]: addContact,\r\n  [deleteContactSuccess]: deleteContact,\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n  [fetchContactsRequest]: () => true,\r\n  [fetchContactsSuccess]: () => false,\r\n  [fetchContactsError]: () => false,\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n});\r\n\r\nexport { contactReducer, loading };\r\n","import { createReducer } from '@reduxjs/toolkit';\r\nimport filterContacts from './filterAction';\r\n\r\nconst filterReducer = createReducer('', {\r\n  [filterContacts]: (_, action) => action.payload,\r\n});\r\n\r\nexport default filterReducer;\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport { contactReducer, loading } from './contacts/contactsReducer';\r\nimport filter from './filter/filterReducer';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nimport authReducer from './auth/authReducers';\r\n\r\nconst authPersistConfig = {\r\n  key: 'auth',\r\n  storage,\r\n  whitelist: ['token'],\r\n};\r\n\r\nconst rootReducer = {\r\n  auth: persistReducer(authPersistConfig, authReducer),\r\n  contacts: contactReducer,\r\n  filter,\r\n  loading,\r\n};\r\n\r\nexport const store = configureStore({\r\n  reducer: rootReducer,\r\n  middleware: [...getDefaultMiddleware({ serializableCheck: false })],\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport { store, persistor } from './redux/store';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nconst getLoading = state => state.loading;\r\n\r\nconst getContacts = state => state.contacts;\r\n\r\nconst getFilter = state => state.filter;\r\n\r\nconst getFilteredContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filter) => {\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(filter),\r\n    );\r\n  },\r\n);\r\n\r\nconst getContactById = createSelector(\r\n  [(_, contactId) => contactId, getContacts],\r\n  (contactId, contacts) => {\r\n    return contacts.find(contact => contact.id === contactId);\r\n  },\r\n);\r\n\r\nexport default {\r\n  getLoading,\r\n  getContacts,\r\n  getFilter,\r\n  getFilteredContacts,\r\n  getContactById,\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__2-yLg\",\"label\":\"Form_label__2nak0\",\"input\":\"Form_input__3sQ1E\",\"button\":\"Form_button__k4DRj\"};","import axios from 'axios';\r\nimport authActions from './authActions';\r\n\r\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com';\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  },\r\n};\r\nconst register = credentials => dispatch => {\r\n  dispatch(authActions.registerRequest());\r\n  axios\r\n    .post('/users/signup', credentials)\r\n    .then(response => {\r\n      token.set(response.data.token);\r\n      dispatch(authActions.registerSuccess(response.data));\r\n    })\r\n    .catch(error => dispatch(authActions.registerError(error.message)));\r\n};\r\n\r\nconst login = credentials => dispatch => {\r\n  dispatch(authActions.loginRequest());\r\n  axios\r\n    .post('/users/login', credentials)\r\n    .then(response => {\r\n      token.set(response.data.token);\r\n      dispatch(authActions.loginSuccess(response.data));\r\n    })\r\n    .catch(error => dispatch(authActions.loginError(error)));\r\n};\r\n\r\nconst getCurrentUser = () => (dispatch, getState) => {\r\n  const {\r\n    auth: { token: persistedToken },\r\n  } = getState();\r\n\r\n  if (!persistedToken) {\r\n    return;\r\n  }\r\n  token.set(persistedToken);\r\n  dispatch(authActions.getCurrentUserRequest());\r\n  axios\r\n    .get('/users/current')\r\n    .then(({ data }) => {\r\n      dispatch(authActions.getCurrentUserSuccess(data));\r\n    })\r\n    .catch(error => dispatch(authActions.getCurrentUserError(error)));\r\n};\r\n\r\nconst logout = () => dispatch => {\r\n  dispatch(authActions.logoutRequest());\r\n  axios\r\n    .post('/users/logout')\r\n    .then(() => {\r\n      token.unset();\r\n      dispatch(authActions.logoutSuccess());\r\n    })\r\n    .catch(error => dispatch(authActions.logoutError(error)));\r\n};\r\nexport default { register, login, getCurrentUser, logout };\r\n","const isAuthenticated = state => state.auth.token;\r\nconst getUserEmail = state => state.auth.user.email;\r\nconst getErrorMessage = state => state.auth.error;\r\n\r\nexport default { isAuthenticated, getUserEmail, getErrorMessage };\r\n","export { default as contactsOperations } from './contactsOperations';\r\nexport { default as contactsSelectors } from './contactsSelectors';\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactsListItem_item__1kz95\",\"contact\":\"ContactsListItem_contact__2FNLu\",\"btn\":\"ContactsListItem_btn__2vCO1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Filter_container__1cn5S\",\"label\":\"Filter_label__InDon\",\"input\":\"Filter_input__2G4tU\",\"enter\":\"Filter_enter__1q_Hw\",\"enterActive\":\"Filter_enterActive__2Kkga\",\"exit\":\"Filter_exit__3S-QZ\",\"exitActive\":\"Filter_exitActive__2nA7m\"};","import { combineReducers, createReducer } from '@reduxjs/toolkit';\r\nimport authActions from './authActions';\r\n\r\nconst initialState = {\r\n  name: null,\r\n  email: null,\r\n};\r\n\r\nconst user = createReducer(initialState, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\r\n  [authActions.logoutSuccess]: () => initialState,\r\n});\r\n\r\nconst token = createReducer(null, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.logoutSuccess]: () => null,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n  [authActions.registerError]: (_, { payload }) => payload,\r\n  [authActions.loginError]: (_, { payload }) => payload,\r\n  [authActions.logoutError]: (_, { payload }) => payload,\r\n  [authActions.getCurrentUserError]: (_, { payload }) => payload,\r\n  [authActions.logoutSuccess]: () => null,\r\n});\r\n\r\nexport default combineReducers({\r\n  user,\r\n  token,\r\n  error,\r\n});\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst filterContacts = createAction('FILTER_CONTACTS');\r\n\r\nexport default filterContacts;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Notification_container__1femf\",\"text\":\"Notification_text__1T-o3\",\"enter\":\"Notification_enter__3SUu_\",\"enterActive\":\"Notification_enterActive__1122s\",\"exit\":\"Notification_exit__2lLro\",\"exitActive\":\"Notification_exitActive__Urbs8\"};","import axios from 'axios';\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n} from './contactsAction';\r\n\r\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com';\r\n\r\nconst addContact = ({ name, number }) => dispatch => {\r\n  dispatch(addContactRequest());\r\n  axios\r\n    .post('/contacts', { name, number })\r\n    .then(({ data }) => dispatch(addContactSuccess(data)))\r\n    .catch(error => dispatch(addContactError(error)));\r\n};\r\n\r\nconst fetchContacts = () => dispatch => {\r\n  dispatch(fetchContactsRequest());\r\n  axios\r\n    .get('/contacts')\r\n    .then(({ data }) => dispatch(fetchContactsSuccess(data)))\r\n    .catch(error => dispatch(fetchContactsError(error)));\r\n};\r\n\r\nconst deleteContact = id => dispatch => {\r\n  dispatch(deleteContactRequest());\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => dispatch(deleteContactSuccess(id)))\r\n    .catch(error => dispatch(deleteContactError(error)));\r\n};\r\nexport default { addContact, fetchContacts, deleteContact };\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Title_title__3Dsjp\",\"appear\":\"Title_appear__2hz4A\",\"appearActive\":\"Title_appearActive__DXKnn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactsList_list__pqO01\",\"enter\":\"ContactsList_enter__3rWoQ\",\"enterActive\":\"ContactsList_enterActive__3ieh2\",\"exit\":\"ContactsList_exit__BuB5E\",\"exitActive\":\"ContactsList_exitActive__2zAk9\"};","import React from 'react';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\nimport Loader from 'react-loader-spinner';\r\nimport styles from './Loader.module.css';\r\n\r\nconst InfoLoader = () => {\r\n  return (\r\n    <div className={styles.loader}>\r\n      <Loader type=\"ThreeDots\" color=\"#f1392d\" height={50} width={50} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InfoLoader;\r\n","import React from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport styles from './Notification.module.css';\r\n\r\nconst Notification = ({ error, message }) => {\r\n  return (\r\n    <CSSTransition\r\n      in={error}\r\n      appear={true}\r\n      timeout={250}\r\n      classNames={styles}\r\n      unmountOnExit\r\n    >\r\n      <div className={styles.container}>\r\n        <p className={styles.text}>{message}</p>\r\n      </div>\r\n    </CSSTransition>\r\n  );\r\n};\r\n\r\nexport default Notification;\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst registerRequest = createAction('auth/registerRequest');\r\nconst registerSuccess = createAction('auth/registerSuccess');\r\nconst registerError = createAction('auth/registerError');\r\n\r\nconst loginRequest = createAction('auth/loginRequest');\r\nconst loginSuccess = createAction('auth/loginSuccess');\r\nconst loginError = createAction('auth/loginError');\r\n\r\nconst logoutRequest = createAction('auth/logoutRequest');\r\nconst logoutSuccess = createAction('auth/logoutSuccess');\r\nconst logoutError = createAction('auth/logoutError');\r\n\r\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\r\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\r\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\r\n\r\nexport default {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader__3OIZx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Layout_container__1yfzb\"};","import React from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport styles from './Title.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Title = ({ title }) => {\r\n  return (\r\n    <CSSTransition in={true} appear={true} timeout={500} classNames={styles}>\r\n      <h2 className={styles.title}>{title}</h2>\r\n    </CSSTransition>\r\n  );\r\n};\r\n\r\nTitle.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\nexport default Title;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { contactsOperations, contactsSelectors } from '../../redux/contacts';\r\nimport Notification from '../../shared/Notification/Notification';\r\nimport styles from './Form.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Form extends Component {\r\n  static propTypes = {\r\n    addContact: PropTypes.func.isRequired,\r\n  };\r\n\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n    contactExists: false,\r\n  };\r\n\r\n  handleChange = event => {\r\n    const { name, value } = event.target;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    const contact = {\r\n      name: this.state.name,\r\n      number: this.state.number,\r\n    };\r\n    if (this.props.contacts.find(({ name }) => name === contact.name)) {\r\n      this.setState({ contactExists: true });\r\n      setTimeout(() => this.setState({ contactExists: false }), 1500);\r\n      return;\r\n    }\r\n    this.props.addContact(contact);\r\n    this.setState({\r\n      name: '',\r\n      number: '',\r\n    });\r\n  };\r\n  render() {\r\n    const { name, number, contactExists } = this.state;\r\n    return (\r\n      <>\r\n        <form className={styles.form} onSubmit={this.handleSubmit}>\r\n          <label className={styles.label}>\r\n            Name\r\n            <input\r\n              type=\"text\"\r\n              value={name}\r\n              name=\"name\"\r\n              onChange={this.handleChange}\r\n              placeholder=\"Enter your full name\"\r\n              className={styles.input}\r\n              required\r\n            />\r\n          </label>\r\n          <label className={styles.label}>\r\n            Number\r\n            <input\r\n              type=\"text\"\r\n              value={number}\r\n              name=\"number\"\r\n              onChange={this.handleChange}\r\n              placeholder=\"xxx-xx-xx\"\r\n              className={styles.input}\r\n              required\r\n            />\r\n          </label>\r\n\r\n          <input type=\"submit\" value=\"Add contact\" className={styles.button} />\r\n          <Notification\r\n            error={contactExists}\r\n            message=\"Contact already exists!\"\r\n          />\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: contactsSelectors.getContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  addContact: contactsOperations.addContact,\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst addContactRequest = createAction('ADD_CONTACT_REQUEST');\r\nconst addContactSuccess = createAction('ADD_CONTACT_SUCCESS');\r\nconst addContactError = createAction('ADD_CONTACT_ERROR');\r\n\r\nconst fetchContactsRequest = createAction('FETCH_CONTACTS_REQUEST');\r\nconst fetchContactsSuccess = createAction('FETCH_CONTACTS_SUCCESS');\r\nconst fetchContactsError = createAction('FETCH_CONTACTS_ERROR');\r\n\r\nconst deleteContactRequest = createAction('DELETE_CONTACT_REQUEST');\r\nconst deleteContactSuccess = createAction('DELETE_CONTACT_SUCCESS');\r\nconst deleteContactError = createAction('DELETE_CONTACT_ERROR');\r\n\r\nexport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n};\r\n","import React from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport { connect } from 'react-redux';\r\nimport filterContacts from '../../redux/filter/filterAction';\r\nimport contactsSelectors from '../../redux/contacts/contactsSelectors';\r\nimport styles from './Filter.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Filter = ({ filter, filterContact, contacts }) => {\r\n  return (\r\n    <CSSTransition\r\n      in={contacts.length > 1}\r\n      appear={true}\r\n      timeout={250}\r\n      unmountOnExit\r\n      classNames={styles}\r\n    >\r\n      <div className={styles.container}>\r\n        <label className={styles.label}>\r\n          Find contacts by name\r\n          <input\r\n            className={styles.input}\r\n            onChange={event => filterContact(event.target.value)}\r\n            value={filter}\r\n          />\r\n        </label>\r\n      </div>\r\n    </CSSTransition>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  filterContact: PropTypes.func.isRequired,\r\n  filter: PropTypes.string.isRequired,\r\n  contacts: PropTypes.array.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    filter: contactsSelectors.getFilter(state),\r\n    contacts: contactsSelectors.getContacts(state),\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  filterContact: filterContacts,\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { contactsOperations, contactsSelectors } from '../../../redux/contacts';\r\nimport styles from './ContactsListItem.module.css';\r\n\r\nconst ContactsListItem = ({ name, number, deleteContact }) => {\r\n  return (\r\n    <li className={styles.item}>\r\n      <p className={styles.contact}>{name}</p>\r\n      <p className={styles.contact}>{number}</p>\r\n      <button type=\"button\" className={styles.btn} onClick={deleteContact}>\r\n        X\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const contact = contactsSelectors.getContactById(state, ownProps.id);\r\n  return { ...contact };\r\n};\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n  deleteContact: () => dispatch(contactsOperations.deleteContact(ownProps.id)),\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsListItem);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\nimport ContactsListItem from './ContactsListItem/ContactsListItem';\r\nimport styles from './ContactsList.module.css';\r\nimport contactsSelectors from '../../redux/contacts/contactsSelectors';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ContactsList = ({ searchContact }) => {\r\n  return (\r\n    <TransitionGroup component=\"ul\" className={styles.list}>\r\n      {searchContact.map(({ id }) => {\r\n        return (\r\n          <CSSTransition key={id} timeout={250} classNames={styles}>\r\n            <ContactsListItem id={id}></ContactsListItem>\r\n          </CSSTransition>\r\n        );\r\n      })}\r\n    </TransitionGroup>\r\n  );\r\n};\r\n\r\nContactsList.propTypes = {\r\n  searchContact: PropTypes.arrayOf(\r\n    PropTypes.exact({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ).isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  searchContact: contactsSelectors.getFilteredContacts(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(ContactsList);\r\n"],"sourceRoot":""}